include_directories(${CMAKE_SOURCE_DIR})
include_directories(${CMAKE_SOURCE_DIR}/third_party)
include_directories(${CMAKE_SOURCE_DIR}/third_party/g3log)
include_directories(${CMAKE_SOURCE_DIR}/third_party/lua)

find_package(Threads)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)
if(MSVC)
    file(COPY ../config DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/Debug)
    file(COPY ../script DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/Debug)
    file(COPY ../config DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/Release)
    file(COPY ../script DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/Release)
    file(COPY ../config DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/MinSizeRel)
    file(COPY ../script DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/MinSizeRel)
    file(COPY ../config DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/RelWithDebInfo)
    file(COPY ../script DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/RelWithDebInfo)
else()
    file(COPY ../config DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
    file(COPY ../script DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
endif()

aux_source_directory(${CMAKE_SOURCE_DIR}/engine/handler ENGINE_SRCS)
aux_source_directory(${CMAKE_SOURCE_DIR}/engine/net ENGINE_SRCS)

add_executable(app ./app/main.cpp ${ENGINE_SRCS})
target_link_libraries(app ${CMAKE_THREAD_LIBS_INIT} g3log lua)
